<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Derek&#39;s Blog</title>
  <subtitle>Stay hungry, Stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangdeyu.github.io/"/>
  <updated>2017-01-10T12:58:20.000Z</updated>
  <id>https://zhangdeyu.github.io/</id>
  
  <author>
    <name>Derek</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS-COUNTER-INCREMENT</title>
    <link href="https://zhangdeyu.github.io/2017/CSS-COUNTER-INCREMENT.html"/>
    <id>https://zhangdeyu.github.io/2017/CSS-COUNTER-INCREMENT.html</id>
    <published>2017-01-09T15:10:30.000Z</published>
    <updated>2017-01-10T12:58:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近碰到一个小需求，在web页面中展示一些规则和条款，并自动对规则和条款进行排序，但规则和条款的数目不定。以前浏览博客时，隐约记得CSS有一个计数器。通过查阅<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Counters" target="_blank" rel="external">MDN</a>后，了解到CSS计数器的值通过使用counter-reset 和 counter-increment 操作，在 content 上应用 counter() 或 counters()函数来显示在页面上。<br><a id="more"></a><br>基本的效果如下所示:</p>
<p></p><p data-height="265" data-theme-id="0" data-slug-hash="ggPpJO" data-default-tab="html,result" data-user="zhangdeyu" data-embed-version="2" data-pen-title="ggPpJO" class="codepen">See the Pen <a href="http://codepen.io/zhangdeyu/pen/ggPpJO/" target="_blank" rel="external">CSS-COUNTER-INCREMENT</a> by Derek (<a href="http://codepen.io/zhangdeyu" target="_blank" rel="external">@zhangdeyu</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>

<p>但有时候有一些特殊需求，比如在中文环境下，每一节用一、二、三、四汉语数字表示，每一条内容用阿拉伯数字表示。遇到这种情况怎么解决呢？<br>通过GOOGLE，发现CSS TRICKS里面的一篇文章<a href="https://css-tricks.com/numbering-in-style/" target="_blank" rel="external">Numbering In Style</a>对这些情况进行了解释。counter()支持第二个参数 <code>counter(name, style)</code>。这里的style就是<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type" target="_blank" rel="external">list-style-type</a>所支持的值。这些值里面就有<code>cjk-ideographic</code> <code>simp-chinese-informal</code>，可以完美的解决这种需求。</p>
<p></p><p data-height="265" data-theme-id="0" data-slug-hash="PWZPQb" data-default-tab="css,result" data-user="zhangdeyu" data-embed-version="2" data-pen-title="CSS-COUNTER-INCREMENT custom" class="codepen">See the Pen <a href="http://codepen.io/zhangdeyu/pen/PWZPQb/" target="_blank" rel="external">CSS-COUNTER-INCREMENT custom</a> by Derek (<a href="http://codepen.io/zhangdeyu" target="_blank" rel="external">@zhangdeyu</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近碰到一个小需求，在web页面中展示一些规则和条款，并自动对规则和条款进行排序，但规则和条款的数目不定。以前浏览博客时，隐约记得CSS有一个计数器。通过查阅&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Counters&quot;&gt;MDN&lt;/a&gt;后，了解到CSS计数器的值通过使用counter-reset 和 counter-increment 操作，在 content 上应用 counter() 或 counters()函数来显示在页面上。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS作用域的问题</title>
    <link href="https://zhangdeyu.github.io/2017/JS%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%9A%84%E9%97%AE%E9%A2%98.html"/>
    <id>https://zhangdeyu.github.io/2017/JS作用域的问题.html</id>
    <published>2017-01-01T11:15:05.000Z</published>
    <updated>2017-01-01T12:31:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到一个前端有趣的前端面试问题，特此记录，分享一下自己的一些看法。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>解释下面代码的输出的结果及原因。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(a);</div><div class="line">    <span class="keyword">var</span> a = <span class="number">5</span>;</div><div class="line">    <span class="built_in">console</span>.log(a);  </div><div class="line">    a++;</div><div class="line">    <span class="keyword">var</span> a;</div><div class="line">    fn2();</div><div class="line">    <span class="built_in">console</span>.log(a);</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(a); </div><div class="line">        a = <span class="number">20</span>;</div><div class="line">        b = <span class="number">100</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">fn();</div><div class="line"><span class="built_in">console</span>.log(a); </div><div class="line">a = <span class="number">10</span>;</div><div class="line"><span class="built_in">console</span>.log(a); </div><div class="line"><span class="built_in">console</span>.log(b);</div></pre></td></tr></table></figure>
<div class="tip"><br>这个题目主要在考察JavaScript中变量的作用域和变量声明提升。掌握了这两个知识点，这个题目就变得很容易解决。<br></div>

<h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Grammar_and_types#变量的作用域" target="_blank" rel="external">MDN</a>有关于变量作用域的详细解释。</p>
<blockquote>
<p>在函数之外声明的变量叫做全局变量，可被当前文档中的任何其他代码访问；在函数内部声明的变量叫做局部变量，只能在该函数内部访问。</p>
</blockquote>
<div class="tip"><br>除此之外还要注意在ECMAScript 6之前JavaScript并没有语句块作用域。<br></div>

<h2 id="变量声明提升"><a href="#变量声明提升" class="headerlink" title="变量声明提升"></a>变量声明提升</h2><p>变量声明提升 <code>Variable hoisting</code> 是JAVASCRIPT的一个比较特别的地方。简单的来说就是可以引用在当前代码之后声明的变量但不产生任何异常，被引用的变量将会返回 <code>undefined</code>，所以看上去是将该变量的声明进行了提前。更详细的内容可以参考MDN<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Grammar_and_types#变量声明提升(Variable_hoisting)" target="_blank" rel="external">变量声明提升</a>。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>该问题的代码变为如下形式：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a;  <span class="comment">// 声明全局变量</span></div><div class="line">a = <span class="number">1</span>;  <span class="comment">// 赋值</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> a; <span class="comment">// 局部变量声明提升</span></div><div class="line">    <span class="keyword">var</span> a;</div><div class="line">    <span class="built_in">console</span>.log(a);  <span class="comment">// undefined</span></div><div class="line">    a = <span class="number">5</span>;</div><div class="line">    <span class="built_in">console</span>.log(a);  <span class="comment">// 5</span></div><div class="line">    a++; <span class="comment">// 6</span></div><div class="line">    fn2();</div><div class="line">    <span class="built_in">console</span>.log(a); <span class="comment">// 20</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(a); <span class="comment">// 6</span></div><div class="line">        a = <span class="number">20</span>;</div><div class="line">        b = <span class="number">100</span>; <span class="comment">// window.b = 100</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">fn();</div><div class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// 全局</span></div><div class="line">a = <span class="number">10</span>;</div><div class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 10</span></div><div class="line"><span class="built_in">console</span>.log(b); <span class="comment">// 100</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天看到一个前端有趣的前端面试问题，特此记录，分享一下自己的一些看法。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;解释下面代码的输出的结果及原因。&lt;/p&gt;
&lt;figur
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>博客更换主题</title>
    <link href="https://zhangdeyu.github.io/2016/%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98.html"/>
    <id>https://zhangdeyu.github.io/2016/博客更换主题.html</id>
    <published>2016-12-16T14:15:43.000Z</published>
    <updated>2016-12-16T14:31:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>自从16年1月份实习开始，到今年年底算是有一年的实习时间了。断断续续的也学到了一些东西，有很多想法也想记录一下。再加上已经不太喜欢以前的博客主题，便想抽个时间把博客重新整理一下。最近又重新倒腾了一下博客，换了新的主题，一些重新开始。在此记录一下~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从16年1月份实习开始，到今年年底算是有一年的实习时间了。断断续续的也学到了一些东西，有很多想法也想记录一下。再加上已经不太喜欢以前的博客主题，便想抽个时间把博客重新整理一下。最近又重新倒腾了一下博客，换了新的主题，一些重新开始。在此记录一下~&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhangdeyu.github.io/2016/hello-world.html"/>
    <id>https://zhangdeyu.github.io/2016/hello-world.html</id>
    <published>2016-12-16T03:39:29.000Z</published>
    <updated>2016-12-16T03:39:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
